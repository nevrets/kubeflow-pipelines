apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: ml-models-pipeline-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.22, pipelines.kubeflow.org/pipeline_compilation_time: '2024-03-05T14:56:28.348325',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Applies Decision Tree,
      Logistic Regression, SVM, Naive Bayes, XGBoost for classification problem.",
      "name": "ML Models Pipeline"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.22}
spec:
  entrypoint: ml-models-pipeline
  templates:
  - name: decision-tree-classifier
    container:
      args: []
      command: [python, decision_tree.py, --data, /tmp/inputs/Data/data, --accuracy,
        /tmp/outputs/Accuracy/data]
      image: nevret/kubeflow-component-tutorial:decision_tree_v1
    inputs:
      artifacts:
      - {name: download-data-function-Data, path: /tmp/inputs/Data/data}
    outputs:
      parameters:
      - name: decision-tree-classifier-Accuracy
        valueFrom: {path: /tmp/outputs/Accuracy/data}
      artifacts:
      - {name: decision-tree-classifier-Accuracy, path: /tmp/outputs/Accuracy/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Trains
          a  decision tree classifier", "implementation": {"container": {"command":
          ["python", "decision_tree.py", "--data", {"inputPath": "Data"}, "--accuracy",
          {"outputPath": "Accuracy"}], "image": "nevret/kubeflow-component-tutorial:decision_tree_v1"}},
          "inputs": [{"description": "Path where data is stored.", "name": "Data",
          "type": "LocalPath"}], "name": "Decision Tree classifier", "outputs": [{"description":
          "Accuracy metric", "name": "Accuracy", "type": "Float"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "dfc45e08773d63c8ffc6b2b0fe1ce882bf56649361534a97a292931841ab5cf2", "url":
          "/data/nevret/kubeflow_pipelines/03-ML-model-project/02-decision_tree/decision_tree.yaml"}'}
  - name: download-data-function
    container:
      args: []
      command: [python, download_data.py, --data, /tmp/outputs/Data/data]
      image: nevret/kubeflow-component-tutorial:download_data_v1
    outputs:
      artifacts:
      - {name: download-data-function-Data, path: /tmp/outputs/Data/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Download
          toy data from sklearn datasets", "implementation": {"container": {"command":
          ["python", "download_data.py", "--data", {"outputPath": "Data"}], "image":
          "nevret/kubeflow-component-tutorial:download_data_v1"}}, "name": "Download
          Data Function", "outputs": [{"description": "Path where data will be stored.",
          "name": "Data", "type": "LocalPath"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "07d2b68c399e229421ba2d8d25d789ca528f99226a4f46eb3c62466a04e697be", "url":
          "/data/nevret/kubeflow_pipelines/03-ML-model-project/01-download_data/download_data.yaml"}'}
  - name: logistic-regression-classifier
    container:
      args: []
      command: [python, logistic_regression.py, --data, /tmp/inputs/Data/data, --accuracy,
        /tmp/outputs/Accuracy/data]
      image: nevret/kubeflow-component-tutorial:logistic_regression_v1
    inputs:
      artifacts:
      - {name: download-data-function-Data, path: /tmp/inputs/Data/data}
    outputs:
      parameters:
      - name: logistic-regression-classifier-Accuracy
        valueFrom: {path: /tmp/outputs/Accuracy/data}
      artifacts:
      - {name: logistic-regression-classifier-Accuracy, path: /tmp/outputs/Accuracy/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Trains
          a Logistic Regression Classifier", "implementation": {"container": {"command":
          ["python", "logistic_regression.py", "--data", {"inputPath": "Data"}, "--accuracy",
          {"outputPath": "Accuracy"}], "image": "nevret/kubeflow-component-tutorial:logistic_regression_v1"}},
          "inputs": [{"description": "Path where data is stored.", "name": "Data",
          "type": "LocalPath"}], "name": "Logistic Regression Classifier", "outputs":
          [{"description": "Accuracy metric", "name": "Accuracy", "type": "Float"}]}',
        pipelines.kubeflow.org/component_ref: '{"digest": "e449dec5129c36e5fbfe2b75c9231bda730d722f9612a66512a5702bcf3415de",
          "url": "/data/nevret/kubeflow_pipelines/03-ML-model-project/03-logistic_regression/logistic_regression.yaml"}'}
  - name: ml-models-pipeline
    dag:
      tasks:
      - name: decision-tree-classifier
        template: decision-tree-classifier
        dependencies: [download-data-function]
        arguments:
          artifacts:
          - {name: download-data-function-Data, from: '{{tasks.download-data-function.outputs.artifacts.download-data-function-Data}}'}
      - {name: download-data-function, template: download-data-function}
      - name: logistic-regression-classifier
        template: logistic-regression-classifier
        dependencies: [download-data-function]
        arguments:
          artifacts:
          - {name: download-data-function-Data, from: '{{tasks.download-data-function.outputs.artifacts.download-data-function-Data}}'}
      - name: naive-bayes-classifier
        template: naive-bayes-classifier
        dependencies: [download-data-function]
        arguments:
          artifacts:
          - {name: download-data-function-Data, from: '{{tasks.download-data-function.outputs.artifacts.download-data-function-Data}}'}
      - name: show-results
        template: show-results
        dependencies: [decision-tree-classifier, logistic-regression-classifier, naive-bayes-classifier,
          support-vector-svm-classifier, xgboost-classifier]
        arguments:
          parameters:
          - {name: decision-tree-classifier-Accuracy, value: '{{tasks.decision-tree-classifier.outputs.parameters.decision-tree-classifier-Accuracy}}'}
          - {name: logistic-regression-classifier-Accuracy, value: '{{tasks.logistic-regression-classifier.outputs.parameters.logistic-regression-classifier-Accuracy}}'}
          - {name: naive-bayes-classifier-Accuracy, value: '{{tasks.naive-bayes-classifier.outputs.parameters.naive-bayes-classifier-Accuracy}}'}
          - {name: support-vector-svm-classifier-Accuracy, value: '{{tasks.support-vector-svm-classifier.outputs.parameters.support-vector-svm-classifier-Accuracy}}'}
          - {name: xgboost-classifier-Accuracy, value: '{{tasks.xgboost-classifier.outputs.parameters.xgboost-classifier-Accuracy}}'}
      - name: support-vector-svm-classifier
        template: support-vector-svm-classifier
        dependencies: [download-data-function]
        arguments:
          artifacts:
          - {name: download-data-function-Data, from: '{{tasks.download-data-function.outputs.artifacts.download-data-function-Data}}'}
      - name: xgboost-classifier
        template: xgboost-classifier
        dependencies: [download-data-function]
        arguments:
          artifacts:
          - {name: download-data-function-Data, from: '{{tasks.download-data-function.outputs.artifacts.download-data-function-Data}}'}
  - name: naive-bayes-classifier
    container:
      args: []
      command: [python, naive_bayes.py, --data, /tmp/inputs/Data/data, --accuracy,
        /tmp/outputs/Accuracy/data]
      image: nevret/kubeflow-component-tutorial:naive_bayes_v1
    inputs:
      artifacts:
      - {name: download-data-function-Data, path: /tmp/inputs/Data/data}
    outputs:
      parameters:
      - name: naive-bayes-classifier-Accuracy
        valueFrom: {path: /tmp/outputs/Accuracy/data}
      artifacts:
      - {name: naive-bayes-classifier-Accuracy, path: /tmp/outputs/Accuracy/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Trains
          a Naive Bayes classifier", "implementation": {"container": {"command": ["python",
          "naive_bayes.py", "--data", {"inputPath": "Data"}, "--accuracy", {"outputPath":
          "Accuracy"}], "image": "nevret/kubeflow-component-tutorial:naive_bayes_v1"}},
          "inputs": [{"description": "Path where data is stored.", "name": "Data",
          "type": "LocalPath"}], "name": "Naive Bayes classifier", "outputs": [{"description":
          "Accuracy metric", "name": "Accuracy", "type": "Float"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "217f5ab81709ddb2d232fee0144c615c728d344297af260a6777df88dff56df2", "url":
          "/data/nevret/kubeflow_pipelines/03-ML-model-project/05-naive_bayes/naive_bayes.yaml"}'}
  - name: show-results
    container:
      args: [--decision-tree, '{{inputs.parameters.decision-tree-classifier-Accuracy}}',
        --logistic-regression, '{{inputs.parameters.logistic-regression-classifier-Accuracy}}',
        --svm, '{{inputs.parameters.support-vector-svm-classifier-Accuracy}}', --naive-bayes,
        '{{inputs.parameters.naive-bayes-classifier-Accuracy}}', --xgb, '{{inputs.parameters.xgboost-classifier-Accuracy}}']
      command:
      - sh
      - -ec
      - |
        program_path=$(mktemp)
        printf "%s" "$0" > "$program_path"
        python3 -u "$program_path" "$@"
      - "def show_results(decision_tree, \n                 logistic_regression, \n\
        \                 svm, \n                 naive_bayes, \n                \
        \ xgb):\n\n    # Given the outputs from decision_tree, logistic regression,\
        \ svm, naive_bayes, xgboost components\n    print(f\"Decision tree (accuracy):\
        \ {decision_tree}\")\n    print(f\"Logistic regression (accuracy): {logistic_regression}\"\
        )\n    print(f\"SVM (SVC) (accuracy): {svm}\")\n    print(f\"Naive Bayes (Gaussian)\
        \ (accuracy): {naive_bayes}\")\n    print(f\"XGBoost (accuracy): {xgb}\")\n\
        \nimport argparse\n_parser = argparse.ArgumentParser(prog='Show results',\
        \ description='')\n_parser.add_argument(\"--decision-tree\", dest=\"decision_tree\"\
        , type=float, required=True, default=argparse.SUPPRESS)\n_parser.add_argument(\"\
        --logistic-regression\", dest=\"logistic_regression\", type=float, required=True,\
        \ default=argparse.SUPPRESS)\n_parser.add_argument(\"--svm\", dest=\"svm\"\
        , type=float, required=True, default=argparse.SUPPRESS)\n_parser.add_argument(\"\
        --naive-bayes\", dest=\"naive_bayes\", type=float, required=True, default=argparse.SUPPRESS)\n\
        _parser.add_argument(\"--xgb\", dest=\"xgb\", type=float, required=True, default=argparse.SUPPRESS)\n\
        _parsed_args = vars(_parser.parse_args())\n\n_outputs = show_results(**_parsed_args)\n"
      image: python:3.7
    inputs:
      parameters:
      - {name: decision-tree-classifier-Accuracy}
      - {name: logistic-regression-classifier-Accuracy}
      - {name: naive-bayes-classifier-Accuracy}
      - {name: support-vector-svm-classifier-Accuracy}
      - {name: xgboost-classifier-Accuracy}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"implementation": {"container":
          {"args": ["--decision-tree", {"inputValue": "decision_tree"}, "--logistic-regression",
          {"inputValue": "logistic_regression"}, "--svm", {"inputValue": "svm"}, "--naive-bayes",
          {"inputValue": "naive_bayes"}, "--xgb", {"inputValue": "xgb"}], "command":
          ["sh", "-ec", "program_path=$(mktemp)\nprintf \"%s\" \"$0\" > \"$program_path\"\npython3
          -u \"$program_path\" \"$@\"\n", "def show_results(decision_tree, \n                 logistic_regression,
          \n                 svm, \n                 naive_bayes, \n                 xgb):\n\n    #
          Given the outputs from decision_tree, logistic regression, svm, naive_bayes,
          xgboost components\n    print(f\"Decision tree (accuracy): {decision_tree}\")\n    print(f\"Logistic
          regression (accuracy): {logistic_regression}\")\n    print(f\"SVM (SVC)
          (accuracy): {svm}\")\n    print(f\"Naive Bayes (Gaussian) (accuracy): {naive_bayes}\")\n    print(f\"XGBoost
          (accuracy): {xgb}\")\n\nimport argparse\n_parser = argparse.ArgumentParser(prog=''Show
          results'', description='''')\n_parser.add_argument(\"--decision-tree\",
          dest=\"decision_tree\", type=float, required=True, default=argparse.SUPPRESS)\n_parser.add_argument(\"--logistic-regression\",
          dest=\"logistic_regression\", type=float, required=True, default=argparse.SUPPRESS)\n_parser.add_argument(\"--svm\",
          dest=\"svm\", type=float, required=True, default=argparse.SUPPRESS)\n_parser.add_argument(\"--naive-bayes\",
          dest=\"naive_bayes\", type=float, required=True, default=argparse.SUPPRESS)\n_parser.add_argument(\"--xgb\",
          dest=\"xgb\", type=float, required=True, default=argparse.SUPPRESS)\n_parsed_args
          = vars(_parser.parse_args())\n\n_outputs = show_results(**_parsed_args)\n"],
          "image": "python:3.7"}}, "inputs": [{"name": "decision_tree", "type": "Float"},
          {"name": "logistic_regression", "type": "Float"}, {"name": "svm", "type":
          "Float"}, {"name": "naive_bayes", "type": "Float"}, {"name": "xgb", "type":
          "Float"}], "name": "Show results"}', pipelines.kubeflow.org/component_ref: '{}',
        pipelines.kubeflow.org/arguments.parameters: '{"decision_tree": "{{inputs.parameters.decision-tree-classifier-Accuracy}}",
          "logistic_regression": "{{inputs.parameters.logistic-regression-classifier-Accuracy}}",
          "naive_bayes": "{{inputs.parameters.naive-bayes-classifier-Accuracy}}",
          "svm": "{{inputs.parameters.support-vector-svm-classifier-Accuracy}}", "xgb":
          "{{inputs.parameters.xgboost-classifier-Accuracy}}"}'}
  - name: support-vector-svm-classifier
    container:
      args: []
      command: [python, svm.py, --data, /tmp/inputs/Data/data, --accuracy, /tmp/outputs/Accuracy/data]
      image: nevret/kubeflow-component-tutorial:svm_v1
    inputs:
      artifacts:
      - {name: download-data-function-Data, path: /tmp/inputs/Data/data}
    outputs:
      parameters:
      - name: support-vector-svm-classifier-Accuracy
        valueFrom: {path: /tmp/outputs/Accuracy/data}
      artifacts:
      - {name: support-vector-svm-classifier-Accuracy, path: /tmp/outputs/Accuracy/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Trains
          a svm classifier", "implementation": {"container": {"command": ["python",
          "svm.py", "--data", {"inputPath": "Data"}, "--accuracy", {"outputPath":
          "Accuracy"}], "image": "nevret/kubeflow-component-tutorial:svm_v1"}}, "inputs":
          [{"description": "Path where data is stored.", "name": "Data", "type": "LocalPath"}],
          "name": "Support Vector (svm) classifier", "outputs": [{"description": "Accuracy
          metric", "name": "Accuracy", "type": "Float"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "bd18092040654963af364b5456952690ae08fac749f67606036fafefe3a207eb", "url":
          "/data/nevret/kubeflow_pipelines/03-ML-model-project/04-svm/svm.yaml"}'}
  - name: xgboost-classifier
    container:
      args: []
      command: [python, xg_boost.py, --data, /tmp/inputs/Data/data, --accuracy, /tmp/outputs/Accuracy/data]
      image: nevret/kubeflow-component-tutorial:xgb_v1
    inputs:
      artifacts:
      - {name: download-data-function-Data, path: /tmp/inputs/Data/data}
    outputs:
      parameters:
      - name: xgboost-classifier-Accuracy
        valueFrom: {path: /tmp/outputs/Accuracy/data}
      artifacts:
      - {name: xgboost-classifier-Accuracy, path: /tmp/outputs/Accuracy/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Trains
          an xgboost classifier", "implementation": {"container": {"command": ["python",
          "xg_boost.py", "--data", {"inputPath": "Data"}, "--accuracy", {"outputPath":
          "Accuracy"}], "image": "nevret/kubeflow-component-tutorial:xgb_v1"}}, "inputs":
          [{"description": "Path where data is stored.", "name": "Data", "type": "LocalPath"}],
          "name": "XGBoost classifier", "outputs": [{"description": "Accuracy metric",
          "name": "Accuracy", "type": "Float"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "bbf1a3068a6aa466194088c258b8ab54bea4d0528e181453a2c04723a4dc8388", "url":
          "/data/nevret/kubeflow_pipelines/03-ML-model-project/06-xgb/xg_boost.yaml"}'}
  arguments:
    parameters: []
  serviceAccountName: pipeline-runner
